import googlemaps

# Replace 'YOUR_API_KEY' with your actual Google Maps API key
API_KEY = 'YOUR_API_KEY'
gmaps = googlemaps.Client(key=API_KEY)

# Coordinates of the locations
current_location = (-37.0089331, 174.7838064)
destination_location = (-36.8707883, 174.7701537)
waypoints = [(-36.9409461, 174.9039851),
             (-36.849963, 174.7560774),
             (-36.6896228, 174.7517096)]

# Combine the current location, waypoints, and destination
locations = [current_location] + waypoints + [destination_location]

# Assuming a constant energy consumption rate (in Wh/km)
energy_consumption_rate = 200  # Adjust this value based on your vehicle's efficiency

total_distance = 0
total_energy_consumption = 0
total_duration_seconds = 0
last_location = None  # To store the last location for continuing the route

# Calculate energy consumption and duration
for i, step in enumerate(result[0]['legs'][0]['steps']):
    if i == 0 and last_location is not None:
        # If continuing from the last location, set the origin accordingly
        step['start_location'] = {'lat': last_location[0], 'lng': last_location[1]}

    distance = step['distance']['value'] / 1000  # Convert distance from meters to kilometers
    duration_seconds = step['duration']['value']
    total_distance += distance
    total_duration_seconds += duration_seconds

    energy_consumption = distance * energy_consumption_rate
    total_energy_consumption += energy_consumption

    # Save the end location for continuing the route
    last_location = (step['end_location']['lat'], step['end_location']['lng'])

    print(f"{step['html_instructions']}, Distance: {distance:.2f} km, Energy Consumption: {energy_consumption:.2f} Wh, Duration: {duration_seconds // 60} min {duration_seconds % 60} sec")

# Print the total energy consumption and total duration for the entire route
print(f"\nCurrent Location: {current_location}")
print(f"Destination: {destination_location}")
print(f"Total Distance: {total_distance:.2f} km")
print(f"Total Energy Consumption: {total_energy_consumption:.2f} Wh")
print(f"Total Duration: {total_duration_seconds // 60} min {total_duration_seconds % 60} sec")
