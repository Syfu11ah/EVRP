import googlemaps
from datetime import datetime

def calculate_energy_consumption(distance_km, efficiency_kWh_per_km):
    return distance_km * efficiency_kWh_per_km

def get_route_coordinates(api_key, origin, destination, mode='driving'):
    gmaps = googlemaps.Client(key=api_key)

    # Get directions
    directions_result = gmaps.directions(origin, destination, mode=mode, departure_time=datetime.now())

    # Extract route coordinates
    route_coordinates = []
    for step in directions_result[0]['legs'][0]['steps']:
        start_location = step['start_location']
        route_coordinates.append((start_location['lat'], start_location['lng']))

    # Add the destination coordinates
    end_location = directions_result[0]['legs'][0]['end_location']
    route_coordinates.append((end_location['lat'], end_location['lng']))

    return route_coordinates

def main():
    api_key = 'YOUR_API_KEY'
    destinations = [(-37.0089331, 174.7838064), (-36.9409461, 174.9039851),
                    (-36.849963, 174.7560774), (-36.6896228, 174.7517096)]

    mode = 'driving'  # You can change the mode to 'walking', 'bicycling', etc.

    efficiency_kWh_per_km = 0.2  # Replace with your vehicle's efficiency
    initial_battery_capacity = 100.0  # Initial battery capacity in percentage
    min_battery_capacity = 20.0  # Minimum battery capacity to stop the trip

    total_energy_consumption = 0
    remaining_battery_capacity = initial_battery_capacity
    last_reached_destination = None

    for destination in destinations:
        if last_reached_destination is not None:
            origin = last_reached_destination
        else:
            origin = (-36.8536098, 174.7664805)  # Initial starting point

        route_coordinates = get_route_coordinates(api_key, origin, destination, mode)
        distance_km = sum(gmaps.distance_matrix(route_coordinates[i], route_coordinates[i+1])['rows'][0]['elements'][0]['distance']['value'] / 1000 for i in range(len(route_coordinates)-1))
        energy_consumption = calculate_energy_consumption(distance_km, efficiency_kWh_per_km)
        total_energy_consumption += energy_consumption
        remaining_battery_capacity -= (energy_consumption / initial_battery_capacity) * 100

        print(f"Route from {origin} to {destination}:")
        print(f"Distance: {distance_km:.2f} km")
        print(f"Energy Consumption: {energy_consumption:.2f} kWh")
        print(f"Remaining Battery Capacity: {remaining_battery_capacity:.2f}%")

        if remaining_battery_capacity <= min_battery_capacity:
            print(f"Stopping the trip as remaining battery capacity is below {min_battery_capacity}%")
            break

        last_reached_destination = destination

    print(f"Total Energy Consumption for the entire trip: {total_energy_consumption:.2f} kWh")

if __name__ == "__main__":
    gmaps = googlemaps.Client(key='YOUR_API_KEY')
    main()
